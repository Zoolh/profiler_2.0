{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\modals\\\\support.modal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SupportDataService from '../../services/SupportInvServices';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst ModalProfil = props => {\n  const useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      marginBottom: 10 // backgroundColor: 'green'\n\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)'\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  const classes = useStyles();\n  const [listeSupports, setListeSupports] = useState([]);\n  const [allSupports, setAllSupports] = useState([]);\n  useEffect(() => {\n    getListeSupport();\n    getAllSupports();\n  }, []);\n\n  const getListeSupport = () => {\n    SupportDataService.getByPropositionId(props.IdPropositionSupport).then(response => {\n      setListeSupports(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const getAllSupports = () => {\n    SupportDataService.getAll().then(response => {\n      setAllSupports(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Vos r\\xE9ponses permettent de d\\xE9terminer que les supports d'investissement qui vous correspondent sont\"), allSupports.map((s, key) => {\n    var equals = listeSupports.some(el => el.libelle === s.libelle);\n    return /*#__PURE__*/React.createElement(Card, {\n      key: key,\n      className: classes.root,\n      style: {\n        backgroundColor: equals ? 'LightGreen' : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, s.libelle), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: s.description,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, \"Pour plus d'infos, suivez ce lien\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }))));\n  }));\n};\n\nexport default ModalProfil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/modals/support.modal.js"],"names":["React","useState","useEffect","SupportDataService","Card","CardContent","Typography","makeStyles","ModalProfil","props","useStyles","root","minWidth","marginBottom","bullet","display","margin","transform","title","fontSize","pos","classes","listeSupports","setListeSupports","allSupports","setAllSupports","getListeSupport","getAllSupports","getByPropositionId","IdPropositionSupport","then","response","data","console","log","catch","e","getAll","map","s","key","equals","some","el","libelle","backgroundColor","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SupportDataService from '../../services/SupportInvServices'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ModalProfil = props => {\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            minWidth: 275,\r\n            marginBottom: 10,\r\n            // backgroundColor: 'green'\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const [listeSupports, setListeSupports] = useState([])\r\n    const [allSupports, setAllSupports] = useState([])\r\n\r\n    useEffect(() => {\r\n        getListeSupport()\r\n        getAllSupports()\r\n    }, [])\r\n\r\n    const getListeSupport = () => {\r\n        SupportDataService.getByPropositionId(props.IdPropositionSupport)\r\n            .then(response => {\r\n                setListeSupports(response.data)\r\n                console.log(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    const getAllSupports = () => {\r\n        SupportDataService.getAll()\r\n            .then(response => {\r\n                setAllSupports(response.data)\r\n                console.log(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                Vos réponses permettent de déterminer que les supports d'investissement qui vous correspondent sont\r\n        </div>\r\n            {allSupports.map((s, key) => {\r\n                var equals = listeSupports.some(el => el.libelle === s.libelle);\r\n                return (\r\n                    <Card key={key} className={classes.root} style={{ backgroundColor: (equals) ? 'LightGreen' : null }}>\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                {s.libelle}\r\n                            </Typography>\r\n\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                <a href={s.description} target=\"_blank\">Pour plus d'infos, suivez ce lien</a>\r\n                                \r\n                                <br />\r\n\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalProfil;\r\n"]},"metadata":{},"sourceType":"module"}