{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\Proposition.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { For } from 'react-loops';\nimport PropositionDataService from '../services/PropositionService';\nimport { setPointProfil } from '../actions/profilAction';\nimport \"./Proposition.css\";\n\nconst Proposition = props => {\n  const dispatch = useDispatch();\n  const [listePropositions, setListePropositions] = useState();\n  useEffect(() => getListPropositions(), [props.idQuestion]);\n\n  const getListPropositions = () => {\n    PropositionDataService.getAllByIdQuestion(props.idQuestion).then(response => {\n      setListePropositions(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const nbPoint = useSelector(state => {\n    if (state.profil.point) {\n      return state.profil.point;\n    } else {\n      return 0;\n    }\n  });\n\n  const nextQuestion = proposition => {\n    console.log(nbPoint);\n    dispatch(setPointProfil(proposition.pointsProfil));\n    props.setIndexHandler();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group list-group-flush proposition-container \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(For, {\n    of: listePropositions,\n    as: proposition => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group-item proposition-card\" // onClick={props.setIndexHandler}\n      ,\n      onClick: e => nextQuestion(proposition),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, proposition.libelle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Proposition;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/Proposition.js"],"names":["React","useState","useEffect","useSelector","useDispatch","For","PropositionDataService","setPointProfil","Proposition","props","dispatch","listePropositions","setListePropositions","getListPropositions","idQuestion","getAllByIdQuestion","then","response","data","catch","e","console","log","nbPoint","state","profil","point","nextQuestion","proposition","pointsProfil","setIndexHandler","libelle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,EAA1D;AAEAC,EAAAA,SAAS,CAAC,MAAMW,mBAAmB,EAA1B,EAA8B,CAACJ,KAAK,CAACK,UAAP,CAA9B,CAAT;;AAEA,QAAMD,mBAAmB,GAAG,MAAM;AAChCP,IAAAA,sBAAsB,CAACS,kBAAvB,CAA0CN,KAAK,CAACK,UAAhD,EACGE,IADH,CACQC,QAAQ,IAAI;AAChBL,MAAAA,oBAAoB,CAACK,QAAQ,CAACC,IAAV,CAApB;AACD,KAHH,EAIGC,KAJH,CAISC,CAAC,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KANH;AAOD,GARD;;AAUA,QAAMG,OAAO,GAAGpB,WAAW,CAAEqB,KAAD,IAAW;AACrC,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAjB,EAAwB;AACtB,aAAOF,KAAK,CAACC,MAAN,CAAaC,KAApB;AACD,KAFD,MAEO;AACL,aAAO,CAAP;AACD;AACF,GAN0B,CAA3B;;AAQA,QAAMC,YAAY,GAAIC,WAAD,IAAiB;AACpCP,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAb,IAAAA,QAAQ,CAACH,cAAc,CAACqB,WAAW,CAACC,YAAb,CAAf,CAAR;AACApB,IAAAA,KAAK,CAACqB,eAAN;AACD,GAJD;;AAOA,sBAEE;AAAK,IAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAEnB,iBAAT;AAA4B,IAAA,EAAE,EAAEiB,WAAW,iBACzC;AAAK,MAAA,SAAS,EAAC,kCAAf,CACE;AADF;AAEE,MAAA,OAAO,EAAGR,CAAD,IAAOO,YAAY,CAACC,WAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,WAAW,CAACG,OAJf,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAeD,CA/CD;;AAiDA,eAAevB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { For } from 'react-loops'\r\nimport PropositionDataService from '../services/PropositionService'\r\nimport { setPointProfil } from '../actions/profilAction'\r\nimport \"./Proposition.css\"\r\n\r\nconst Proposition = props => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [listePropositions, setListePropositions] = useState();\r\n\r\n  useEffect(() => getListPropositions(), [props.idQuestion])\r\n\r\n  const getListPropositions = () => {\r\n    PropositionDataService.getAllByIdQuestion(props.idQuestion)\r\n      .then(response => {\r\n        setListePropositions(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e)\r\n      })\r\n  }\r\n\r\n  const nbPoint = useSelector((state) => {\r\n    if (state.profil.point) {\r\n      return state.profil.point\r\n    } else {\r\n      return 0\r\n    }\r\n  });\r\n\r\n  const nextQuestion = (proposition) => {\r\n    console.log(nbPoint)\r\n    dispatch(setPointProfil(proposition.pointsProfil))\r\n    props.setIndexHandler()\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"list-group list-group-flush proposition-container \" >\r\n      <For of={listePropositions} as={proposition =>\r\n        <div className=\"list-group-item proposition-card\"\r\n          // onClick={props.setIndexHandler}\r\n          onClick={(e) => nextQuestion(proposition)}\r\n        >\r\n          {proposition.libelle}\r\n        </div>\r\n\r\n      } />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Proposition;\r\n"]},"metadata":{},"sourceType":"module"}