{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\modals\\\\gestion.modal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport GestionDataService from '../../services/TypeGestionServices';\n\nconst ModalProfil = props => {\n  const [allTypesGestion, setAllTypesGestion] = useState([]);\n\n  const getAllTypesGestion = () => {\n    GestionDataService.getAll().then(response => {\n      setAllTypesGestion(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getAllTypesGestion();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Vos r\\xE9ponses permettent de d\\xE9terminer que vous pouvez opter pour un niveau de risque\"), allTypesGestion.map((gestion, key) => {\n    console.log(gestion);\n    return /*#__PURE__*/React.createElement(Card, {\n      key: key,\n      className: classes.root,\n      style: {\n        backgroundColor: p.libelle === profil.libelle ? 'LightGreen' : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    });\n  }));\n};\n\nexport default ModalProfil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/modals/gestion.modal.js"],"names":["React","useState","useEffect","GestionDataService","ModalProfil","props","allTypesGestion","setAllTypesGestion","getAllTypesGestion","getAll","then","response","data","catch","e","console","log","map","gestion","key","classes","root","backgroundColor","p","libelle","profil"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;;AAGA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMO,kBAAkB,GAAG,MAAM;AAC7BL,IAAAA,kBAAkB,CAACM,MAAnB,GACKC,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,kBAAkB,CAACI,QAAQ,CAACC,IAAV,CAAlB;AACH,KAHL,EAIKC,KAJL,CAIWC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KANL;AAOH,GARD;;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGADJ,EAIKF,eAAe,CAACW,GAAhB,CAAoB,CAACC,OAAD,EAAUC,GAAV,KAAkB;AACnCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,wBACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEC,GAAX;AAAgB,MAAA,SAAS,EAAEC,OAAO,CAACC,IAAnC;AAAyC,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAGC,CAAC,CAACC,OAAF,KAAcC,MAAM,CAACD,OAAtB,GAAiC,YAAjC,GAAgD;AAAnE,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAqBH,GAvBA,CAJL,CAFJ;AAiCH,CAnDD;;AAqDA,eAAepB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport GestionDataService from '../../services/TypeGestionServices'\r\n\r\n\r\nconst ModalProfil = props => {\r\n\r\n    const [allTypesGestion, setAllTypesGestion] = useState([])\r\n\r\n    const getAllTypesGestion = () => {\r\n        GestionDataService.getAll()\r\n            .then(response => {\r\n                setAllTypesGestion(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllTypesGestion()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n            Vos réponses permettent de déterminer que vous pouvez opter pour un niveau de risque\r\n            </div>\r\n            {allTypesGestion.map((gestion, key) => {\r\n                console.log(gestion)\r\n                return (\r\n                    <Card key={key} className={classes.root} style={{ backgroundColor: (p.libelle === profil.libelle) ? 'LightGreen' : null }}>\r\n                        {/* <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                {gestion.libelle}\r\n                            </Typography>\r\n\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                Variation moyenne annuelle cible : {p.variation}\r\n                                <br />\r\n                                Temps à y consacrer (Sauf gestion déléguée) : {p.temps}\r\n                                {profil.libelle === \"Trader\" && p.libelle === \"Trader\" ?\r\n                                    (<div>\r\n                                        <br />\r\n                                        <p>Vos réponses permettent de déterminer qu'en plus de votre profil d'investisseur vous pouvez envisager le profil Trader</p>\r\n                                    </div>) :\r\n                                    (null)}\r\n                            </Typography>\r\n                        </CardContent> */}\r\n                    </Card>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalProfil;\r\n"]},"metadata":{},"sourceType":"module"}