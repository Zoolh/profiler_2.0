{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\modals\\\\profil.modal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ProfilDataService from '../../services/ProfilService';\n\nconst ModalProfil = props => {\n  const initialStateProfil = {\n    id: null,\n    libelle: \"\",\n    temps: \"\",\n    variation: \"\",\n    actif_profil: [],\n    conseil_profil: [],\n    description: \"\"\n  };\n  const [profil, setProfil] = useState(initialStateProfil);\n  const [allProfils, setAllProfils] = useState([]);\n  useEffect(() => {\n    console.log(props.ResultatProfil);\n    getProfil();\n    getAllProfil();\n  }, []);\n\n  const getProfil = () => {\n    ProfilDataService.getById(props.ResultatProfil).then(response => {\n      setProfil({\n        id: response.data.id,\n        libelle: response.data.libelle,\n        temps: response.data.temps,\n        variation: response.data.variation,\n        actif_profil: response.data.actif_profil,\n        description: response.data.description\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const getAllProfil = () => {\n    ProfilDataService.getAll().then(response => {\n      console.log(response.data);\n      setAllProfils(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Vous \\xEAtes de profil : \", profil.libelle), allProfils.map((profil, key) => {\n    console.log(profil);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }\n    }, \" \", profil.libelle, \" \");\n  }));\n};\n\nexport default ModalProfil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/modals/profil.modal.js"],"names":["React","useState","useEffect","ProfilDataService","ModalProfil","props","initialStateProfil","id","libelle","temps","variation","actif_profil","conseil_profil","description","profil","setProfil","allProfils","setAllProfils","console","log","ResultatProfil","getProfil","getAllProfil","getById","then","response","data","catch","e","getAll","map","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;;AAGA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAMC,kBAAkB,GAAG;AACvBC,IAAAA,EAAE,EAAE,IADmB;AAEvBC,IAAAA,OAAO,EAAE,EAFc;AAGvBC,IAAAA,KAAK,EAAE,EAHgB;AAIvBC,IAAAA,SAAS,EAAE,EAJY;AAKvBC,IAAAA,YAAY,EAAE,EALS;AAMvBC,IAAAA,cAAc,EAAE,EANO;AAOvBC,IAAAA,WAAW,EAAE;AAPU,GAA3B;AAUA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAACK,kBAAD,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACe,cAAlB;AACAC,IAAAA,SAAS;AACTC,IAAAA,YAAY;AACf,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMD,SAAS,GAAG,MAAM;AACpBlB,IAAAA,iBAAiB,CAACoB,OAAlB,CAA0BlB,KAAK,CAACe,cAAhC,EACKI,IADL,CACUC,QAAQ,IAAI;AACdV,MAAAA,SAAS,CAAC;AACNR,QAAAA,EAAE,EAAEkB,QAAQ,CAACC,IAAT,CAAcnB,EADZ;AAENC,QAAAA,OAAO,EAAEiB,QAAQ,CAACC,IAAT,CAAclB,OAFjB;AAGNC,QAAAA,KAAK,EAAEgB,QAAQ,CAACC,IAAT,CAAcjB,KAHf;AAINC,QAAAA,SAAS,EAAEe,QAAQ,CAACC,IAAT,CAAchB,SAJnB;AAKNC,QAAAA,YAAY,EAAEc,QAAQ,CAACC,IAAT,CAAcf,YALtB;AAMNE,QAAAA,WAAW,EAAEY,QAAQ,CAACC,IAAT,CAAcb;AANrB,OAAD,CAAT;AAQH,KAVL,EAWKc,KAXL,CAWWC,CAAC,IAAI;AACRV,MAAAA,OAAO,CAACC,GAAR,CAAYS,CAAZ;AACH,KAbL;AAcH,GAfD;;AAkBA,QAAMN,YAAY,GAAG,MAAM;AACvBnB,IAAAA,iBAAiB,CAAC0B,MAAlB,GACKL,IADL,CACUC,QAAQ,IAAI;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACC,IAArB;AACAT,MAAAA,aAAa,CAACQ,QAAQ,CAACC,IAAV,CAAb;AACH,KAJL,EAKKC,KALL,CAKWC,CAAC,IAAI;AACRV,MAAAA,OAAO,CAACC,GAAR,CAAYS,CAAZ;AACH,KAPL;AAQH,GATD;;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC2Bd,MAAM,CAACN,OADlC,CADJ,EAKKQ,UAAU,CAACc,GAAX,CAAe,CAAChB,MAAD,EAASiB,GAAT,KAAiB;AAC7Bb,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,wBACG;AAAK,MAAA,GAAG,EAAEiB,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiBjB,MAAM,CAACN,OAAxB,MADH;AAGH,GALA,CALL,CADJ;AAeH,CAjED;;AAmEA,eAAeJ,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ProfilDataService from '../../services/ProfilService'\r\n\r\n\r\nconst ModalProfil = props => {\r\n\r\n    const initialStateProfil = {\r\n        id: null,\r\n        libelle: \"\",\r\n        temps: \"\",\r\n        variation: \"\",\r\n        actif_profil: [],\r\n        conseil_profil: [],\r\n        description: \"\"\r\n    };\r\n\r\n    const [profil, setProfil] = useState(initialStateProfil);\r\n    const [allProfils, setAllProfils] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(props.ResultatProfil)\r\n        getProfil()\r\n        getAllProfil()\r\n    }, [])\r\n\r\n    const getProfil = () => {\r\n        ProfilDataService.getById(props.ResultatProfil)\r\n            .then(response => {\r\n                setProfil({\r\n                    id: response.data.id,\r\n                    libelle: response.data.libelle,\r\n                    temps: response.data.temps,\r\n                    variation: response.data.variation,\r\n                    actif_profil: response.data.actif_profil,\r\n                    description: response.data.description\r\n                });\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n\r\n    const getAllProfil = () => {\r\n        ProfilDataService.getAll()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setAllProfils(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Vous Ãªtes de profil : {profil.libelle}\r\n            </div>\r\n\r\n            {allProfils.map((profil, key) => {\r\n                console.log(profil)\r\n                return(\r\n                   <div key={key}> {profil.libelle} </div>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalProfil;\r\n"]},"metadata":{},"sourceType":"module"}