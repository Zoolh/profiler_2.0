{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\Profil.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { For } from 'react-loops';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ProfilDataService from '../services/ProfilService';\nimport { useSelector } from \"react-redux\";\nimport \"./modals/index\";\nimport './Profil.css';\nimport ModalBody from \"react-bootstrap/ModalBody\";\n\nconst Profil = props => {\n  const [listeOptions, setListeOptions] = useState(0);\n  const [modalShow, setModalShow] = useState(false);\n  const [activeOnglet, setActiveOnglet] = useState();\n  const [profil, setProfil] = useState();\n  const listeOnglets = ['Type de Gestion', 'Profil risque gain', 'Support d\\'investissement', 'Marchés & Produits', 'Règles d\\'Or', 'Pour aller plus loin'];\n  const nbPointProfil = useSelector(state => {\n    return state.profil.point;\n  });\n  const nbQuestionProfil = useSelector(state => {\n    return state.profil.nbReponses;\n  });\n  const ResultatProfil = Number((nbPointProfil / nbQuestionProfil).toFixed(0));\n\n  const getActiveBloc = onglet => {\n    setActiveOnglet(onglet);\n    getProfil();\n    console.log(profil); // getOptions(bloc.id)\n    // console.log(listeOptions)\n  };\n\n  const getProfil = () => {\n    ProfilDataService.getById(ResultatProfil).then(response => {\n      setProfil(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const MydModalWithGrid = props => {\n    return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n      dialogClassName: \"modal-bloc\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, activeOnglet ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }, activeOnglet) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 61\n      }\n    }, \"NADA\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, activeOnglet === \"Type de Gestion\" ? /*#__PURE__*/React.createElement(ModalProfil, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 52\n      }\n    }) : null, activeOnglet === \"Profil risque gain\" ? /*#__PURE__*/React.createElement(ModalProfil, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 55\n      }\n    }) : null, activeOnglet === \"Support d\\'investissement\" ? /*#__PURE__*/React.createElement(ModalProfil, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 62\n      }\n    }) : null, activeOnglet === \"Marchés & Produits\" ? /*#__PURE__*/React.createElement(ModalProfil, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 55\n      }\n    }) : null, activeOnglet === \"Règles d\\'Or\" ? /*#__PURE__*/React.createElement(ModalProfil, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 49\n      }\n    }) : null, activeOnglet === \"Pour aller plus loin\" ? /*#__PURE__*/React.createElement(ModalProfil, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 57\n      }\n    }) : null), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: props.onHide,\n      className: \"btn-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Fermer\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"RESULTATS\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Profil n\\xB0 : \", ResultatProfil), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(For, {\n    of: listeOnglets,\n    as: onglet => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resultCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"bloc-btn\",\n      onClick: () => {\n        setModalShow(true);\n        getActiveBloc(onglet);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, onglet)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MydModalWithGrid, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Profil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/Profil.js"],"names":["React","useState","useEffect","For","useAccordionToggle","Accordion","Card","Modal","Container","Row","Col","Button","ProfilDataService","useSelector","ModalBody","Profil","props","listeOptions","setListeOptions","modalShow","setModalShow","activeOnglet","setActiveOnglet","profil","setProfil","listeOnglets","nbPointProfil","state","point","nbQuestionProfil","nbReponses","ResultatProfil","Number","toFixed","getActiveBloc","onglet","getProfil","console","log","getById","then","response","data","catch","e","MydModalWithGrid","onHide"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { For } from 'react-loops'\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ProfilDataService from '../services/ProfilService'\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./modals/index\"\r\nimport './Profil.css'\r\nimport ModalBody from \"react-bootstrap/ModalBody\";\r\n\r\nconst Profil = props => {\r\n\r\n    const [listeOptions, setListeOptions] = useState(0)\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [activeOnglet, setActiveOnglet] = useState();\r\n    const [profil, setProfil] = useState();\r\n\r\n    const listeOnglets = ['Type de Gestion',\r\n        'Profil risque gain',\r\n        'Support d\\'investissement',\r\n        'Marchés & Produits',\r\n        'Règles d\\'Or',\r\n        'Pour aller plus loin']\r\n\r\n    const nbPointProfil = useSelector((state) => {\r\n        return state.profil.point\r\n    });\r\n\r\n    const nbQuestionProfil = useSelector((state) => {\r\n        return state.profil.nbReponses\r\n\r\n    });\r\n    const ResultatProfil = Number((nbPointProfil / nbQuestionProfil).toFixed(0));\r\n\r\n    const getActiveBloc = (onglet) => {\r\n        setActiveOnglet(onglet)\r\n        getProfil()\r\n        console.log(profil)\r\n        // getOptions(bloc.id)\r\n        // console.log(listeOptions)\r\n\r\n    }\r\n\r\n    const getProfil = () => {\r\n        ProfilDataService.getById(ResultatProfil)\r\n            .then(response => {\r\n                setProfil(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const MydModalWithGrid = props => {\r\n        return (\r\n            <Modal {...props}\r\n            dialogClassName=\"modal-bloc\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {activeOnglet ? <p>{activeOnglet}</p> : <p>NADA</p>}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            {activeOnglet === \"Type de Gestion\" ?  <ModalProfil/>  : null}\r\n            {activeOnglet === \"Profil risque gain\" ?  <ModalProfil/>  : null}\r\n            {activeOnglet === \"Support d\\'investissement\" ?  <ModalProfil/>  : null}\r\n            {activeOnglet === \"Marchés & Produits\" ?  <ModalProfil/>  : null}\r\n            {activeOnglet === \"Règles d\\'Or\" ?  <ModalProfil/>  : null}\r\n            {activeOnglet === \"Pour aller plus loin\" ?  <ModalProfil/>  : null}\r\n           \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide} className=\"btn-close\">Fermer</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n         \r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>RESULTATS</h1>\r\n            <p>Profil n° : {ResultatProfil}</p>\r\n            <>\r\n                <For of={listeOnglets} as={onglet =>\r\n                    <div className=\"resultCard\">\r\n                        <Button className=\"bloc-btn\" onClick={() => {\r\n                            setModalShow(true);\r\n                            getActiveBloc(onglet)\r\n                        }}>\r\n                            {onglet}\r\n                        </Button>\r\n                    </div>\r\n                } />\r\n                <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)} />\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profil;"]},"metadata":{},"sourceType":"module"}