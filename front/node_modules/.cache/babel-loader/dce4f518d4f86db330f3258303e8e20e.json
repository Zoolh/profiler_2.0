{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\modals\\\\gestion.modal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport GestionDataService from '../../services/TypeGestionServices';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst ModalProfil = props => {\n  const initialTypeGestion = {\n    id: null,\n    libelle: \"\",\n    description: \"\"\n  };\n  const [typeGestion, setTypeGestion] = useState(initialTypeGestion);\n  const [allTypesGestion, setAllTypesGestion] = useState([]);\n\n  const getAllTypesGestion = () => {\n    GestionDataService.getAll().then(response => {\n      setAllTypesGestion(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const getTypeGestion = () => {\n    GestionDataService.getById(props.ResultatGestion).then(response => {\n      setTypeGestion({\n        id: response.data.id,\n        libelle: response.data.libelle,\n        description: response.data.description\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      marginBottom: 10 // backgroundColor: 'green'\n\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)'\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  const classes = useStyles();\n  useEffect(() => {\n    getAllTypesGestion();\n    getTypeGestion();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Vos r\\xE9ponses permettent de d\\xE9terminer que vous pouvez opter pour une gestion\"), allTypesGestion.map((g, key) => {\n    console.log(g);\n    return /*#__PURE__*/React.createElement(Card, {\n      key: key,\n      className: classes.root,\n      style: {\n        backgroundColor: g.libelle === typeGestion.libelle ? 'LightGreen' : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, g.libelle), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, g.description)));\n  }));\n};\n\nexport default ModalProfil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/modals/gestion.modal.js"],"names":["React","useState","useEffect","GestionDataService","Card","CardContent","Typography","makeStyles","ModalProfil","props","initialTypeGestion","id","libelle","description","typeGestion","setTypeGestion","allTypesGestion","setAllTypesGestion","getAllTypesGestion","getAll","then","response","data","console","log","catch","e","getTypeGestion","getById","ResultatGestion","useStyles","root","minWidth","marginBottom","bullet","display","margin","transform","title","fontSize","pos","classes","map","g","key","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport GestionDataService from '../../services/TypeGestionServices'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ModalProfil = props => {\r\n\r\n    const initialTypeGestion = {\r\n        id: null,\r\n        libelle: \"\",\r\n        description: \"\"\r\n    }\r\n\r\n    const [typeGestion, setTypeGestion] = useState(initialTypeGestion)\r\n    const [allTypesGestion, setAllTypesGestion] = useState([])\r\n\r\n    const getAllTypesGestion = () => {\r\n        GestionDataService.getAll()\r\n            .then(response => {\r\n                setAllTypesGestion(response.data)\r\n                console.log(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    const getTypeGestion = () => {\r\n        GestionDataService.getById(props.ResultatGestion)\r\n        .then(response => {\r\n            setTypeGestion({\r\n                id: response.data.id,\r\n                libelle: response.data.libelle,\r\n                description: response.data.description\r\n            });\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            minWidth: 275,\r\n            marginBottom: 10,\r\n            // backgroundColor: 'green'\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        getAllTypesGestion()\r\n        getTypeGestion()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n            Vos réponses permettent de déterminer que vous pouvez opter pour une gestion\r\n            </div>\r\n            {allTypesGestion.map((g, key) => {\r\n                console.log(g)\r\n                return (\r\n                    <Card key={key} className={classes.root} style={{ backgroundColor: (g.libelle === typeGestion.libelle) ? 'LightGreen' : null }}>\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                {g.libelle}\r\n                            </Typography>\r\n\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                {g.description}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalProfil;\r\n"]},"metadata":{},"sourceType":"module"}