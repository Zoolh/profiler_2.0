{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\Accueil.js\";\nimport React, { useState } from \"react\";\nimport './Accueil.css';\nimport QuestionDataService from \"../services/QuestionService\";\nimport Question from \"../components/Question\";\nimport Profil from \"../components/Profil\";\n\nconst Accueil = props => {\n  const [listQuestions, setListQuestions] = useState();\n  const [target, setTarget] = useState(\"accueil\");\n\n  const getListQuestions = () => {\n    QuestionDataService.getAll().then(response => {\n      setListQuestions(response.data);\n      setTarget(\"questionnaire\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const displayProfil = () => {\n    setTarget(\"profil\");\n  };\n\n  if (target === \"profil\") {\n    return /*#__PURE__*/React.createElement(Profil, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    });\n  }\n\n  if (target === \"accueil\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-accueil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"D\\xE9terminez votre profil boursier\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"L'un des crit\\xE8res fondamentaux consiste \\xE0 d\\xE9terminer si vous \\xEAtes Investisseur, Trader ou les 2.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 117\n      }\n    }), \"La confusion entre ces deux profils conduit fr\\xE9quemment \\xE0 l'\\xE9chec et \\xE0 des contre-performances.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"En r\\xE9pondant le plus naturellement possible \\xE0 ces questions, vous pourrez d\\xE9terminer votre profil d'investisseur et savoir ce qui vous correspond le mieux sur les march\\xE9s actuels.\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-start\",\n      onClick: getListQuestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"D\\xE9marrer le questionnaire\"));\n  }\n\n  if (target === \"questionnaire\") {\n    return /*#__PURE__*/React.createElement(Question, {\n      listQuestion: listQuestions,\n      displayProfil: displayProfil,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    });\n  }\n};\n\nexport default Accueil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/Accueil.js"],"names":["React","useState","QuestionDataService","Question","Profil","Accueil","props","listQuestions","setListQuestions","target","setTarget","getListQuestions","getAll","then","response","data","catch","e","console","log","displayProfil"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAGrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,EAAlD;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,SAAD,CAApC;;AAEA,QAAMU,gBAAgB,GAAG,MAAM;AAC3BT,IAAAA,mBAAmB,CAACU,MAApB,GACKC,IADL,CACUC,QAAQ,IAAI;AACdN,MAAAA,gBAAgB,CAACM,QAAQ,CAACC,IAAV,CAAhB;AACAL,MAAAA,SAAS,CAAC,eAAD,CAAT;AACH,KAJL,EAKKM,KALL,CAKWC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAPL;AAQH,GATD;;AAWA,QAAMG,aAAa,GAAG,MAAM;AACxBV,IAAAA,SAAS,CAAC,QAAD,CAAT;AACH,GAFD;;AAKA,MAAID,MAAM,KAAK,QAAf,EAAyB;AACrB,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,MAAIA,MAAM,KAAK,SAAf,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oIACoG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpG,gHAFJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAPJ,oBASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATR,eASc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATd,eAUI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AACI,MAAA,OAAO,EAAEE,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAVJ,CADJ;AAkBH;;AAED,MAAIF,MAAM,KAAK,eAAf,EAAgC;AAC5B,wBACI,oBAAC,QAAD;AACI,MAAA,YAAY,EAAEF,aADlB;AAEI,MAAA,aAAa,EAAEa,aAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;AAIJ,CA3DD;;AA+DA,eAAef,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport './Accueil.css'\r\nimport QuestionDataService from \"../services/QuestionService\"\r\nimport Question from \"../components/Question\"\r\nimport Profil from \"../components/Profil\"\r\n\r\nconst Accueil = props => {\r\n\r\n\r\n    const [listQuestions, setListQuestions] = useState();\r\n    const [target, setTarget] = useState(\"accueil\");\r\n\r\n    const getListQuestions = () => {\r\n        QuestionDataService.getAll()\r\n            .then(response => {\r\n                setListQuestions(response.data);\r\n                setTarget(\"questionnaire\")\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    const displayProfil = () => {\r\n        setTarget(\"profil\")\r\n    }\r\n\r\n\r\n    if (target === \"profil\") {\r\n        return (\r\n            <Profil />\r\n        )\r\n    }\r\n\r\n    if (target === \"accueil\") {\r\n        return (\r\n            <div className=\"div-accueil\">\r\n                <h1>Déterminez votre profil boursier</h1>\r\n                <span>\r\n                    L'un des critères fondamentaux consiste à déterminer si vous êtes Investisseur, Trader ou les 2.<br />\r\n                    La confusion entre ces deux profils conduit fréquemment à l'échec et à des contre-performances.\r\n                </span>\r\n                <br />\r\n                <span>En répondant le plus naturellement possible à ces questions, vous pourrez déterminer votre profil d'investisseur\r\n                  et savoir ce qui vous correspond le mieux sur les marchés actuels.\r\n            </span> <br /><br />\r\n                <button className=\"btn btn-start\"\r\n                    onClick={getListQuestions}\r\n                >\r\n                    Démarrer le questionnaire\r\n              </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (target === \"questionnaire\") {\r\n        return (\r\n            <Question\r\n                listQuestion={listQuestions}\r\n                displayProfil={displayProfil} />\r\n        )\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default Accueil;\r\n"]},"metadata":{},"sourceType":"module"}