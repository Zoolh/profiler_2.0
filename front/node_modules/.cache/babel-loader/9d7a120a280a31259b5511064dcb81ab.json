{"ast":null,"code":"import _slicedToArray from\"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Proposition from\"./Proposition\";import{useSelector}from\"react-redux\";import\"./Question.css\";import ReactDOM from'react-dom';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faArrowLeft}from'@fortawesome/free-solid-svg-icons';var Question=function Question(props){var initialQuestionState={id:props.listQuestion[0].id,libelle:props.listQuestion[0].libelle};var _useState=useState(initialQuestionState),_useState2=_slicedToArray(_useState,2),currentQuestion=_useState2[0],setCurrentQuestion=_useState2[1];// const [indexQuestion, setIndexQuestion] = useState(19);\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),indexQuestion=_useState4[0],setIndexQuestion=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),pourcentageBar=_useState6[0],setPourcentageBar=_useState6[1];useEffect(function(){return setCurrentQuestion(props.listQuestion[indexQuestion],[indexQuestion]);});var setIndex=function setIndex(){setPourcentageBar(progressPercent);setIndexQuestion(indexQuestion+1);};var backPreviousIndex=function backPreviousIndex(){setPourcentageBar(progressPercent);setIndexQuestion(indexQuestion-1);};var displayProfil=function displayProfil(){props.displayProfil();};var progressPercent=(indexQuestion+1)*100/(props.listQuestion.length-1);if(!currentQuestion){return/*#__PURE__*/React.createElement(\"div\",null,displayProfil());}if(currentQuestion){return/*#__PURE__*/React.createElement(\"div\",{className:\"question-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progress\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar progress-bar-striped progress-bar-animated\",style:{width:pourcentageBar+'%'}},\"Question \",indexQuestion+1,\" sur \",props.listQuestion.length)),/*#__PURE__*/React.createElement(\"h3\",{className:\"titre-question\"},currentQuestion.libelle),/*#__PURE__*/React.createElement(\"div\",{className:\"indexQuestion\"}),/*#__PURE__*/React.createElement(Proposition,{setIndexHandler:setIndex,idQuestion:currentQuestion.id}),/*#__PURE__*/React.createElement(\"br\",null));}};export default Question;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/Question.js"],"names":["React","useState","useEffect","Proposition","useSelector","ReactDOM","FontAwesomeIcon","faArrowLeft","Question","props","initialQuestionState","id","listQuestion","libelle","currentQuestion","setCurrentQuestion","indexQuestion","setIndexQuestion","pourcentageBar","setPourcentageBar","setIndex","progressPercent","backPreviousIndex","displayProfil","length","width"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAO,gBAAP,CAEA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,WAAT,KAA4B,mCAA5B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CAExB,GAAMC,CAAAA,oBAAoB,CAAG,CAC3BC,EAAE,CAAEF,KAAK,CAACG,YAAN,CAAmB,CAAnB,EAAsBD,EADC,CAE3BE,OAAO,CAAEJ,KAAK,CAACG,YAAN,CAAmB,CAAnB,EAAsBC,OAFJ,CAA7B,CAFwB,cAMsBZ,QAAQ,CAACS,oBAAD,CAN9B,wCAMjBI,eANiB,eAMAC,kBANA,eAOxB;AAPwB,eAQkBd,QAAQ,CAAC,CAAD,CAR1B,yCAQjBe,aARiB,eAQFC,gBARE,8BASoBhB,QAAQ,CAAC,CAAD,CAT5B,yCASjBiB,cATiB,eASDC,iBATC,eAWxBjB,SAAS,CAAC,iBACRa,CAAAA,kBAAkB,CAACN,KAAK,CAACG,YAAN,CAAmBI,aAAnB,CAAD,CAAoC,CAACA,aAAD,CAApC,CADV,EAAD,CAAT,CAIA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBD,iBAAiB,CAACE,eAAD,CAAjB,CACAJ,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CACD,CAHD,CAKA,GAAMM,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BH,iBAAiB,CAACE,eAAD,CAAjB,CACAJ,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CACD,CAHD,CAKA,GAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1Bd,KAAK,CAACc,aAAN,GACD,CAFD,CAIA,GAAMF,CAAAA,eAAe,CAAI,CAACL,aAAa,CAAG,CAAjB,EAAsB,GAAvB,EAA+BP,KAAK,CAACG,YAAN,CAAmBY,MAAnB,CAA4B,CAA3D,CAAxB,CAGA,GAAI,CAACV,eAAL,CAAsB,CACpB,mBACE,+BACGS,aAAa,EADhB,CADF,CAKD,CAED,GAAIT,eAAJ,CAAqB,CAEnB,mBACE,2BAAK,SAAS,CAAC,oBAAf,eACE,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,yDAAf,CAAyE,KAAK,CAAE,CAAEW,KAAK,CAAEP,cAAc,CAAG,GAA1B,CAAhF,cACYF,aAAa,CAAG,CAD5B,SACoCP,KAAK,CAACG,YAAN,CAAmBY,MADvD,CADF,CADF,cAME,0BAAI,SAAS,CAAC,gBAAd,EAAgCV,eAAe,CAACD,OAAhD,CANF,cAOE,2BAAK,SAAS,CAAC,eAAf,EAPF,cAQE,oBAAC,WAAD,EACE,eAAe,CAAEO,QADnB,CAEE,UAAU,CAAEN,eAAe,CAACH,EAF9B,EARF,cAYE,8BAZF,CADF,CAkBD,CAGF,CA/DD,CAiEA,cAAeH,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Proposition from \"./Proposition\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Question.css\"\r\n\r\nimport ReactDOM from 'react-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Question = props => {\r\n\r\n  const initialQuestionState = {\r\n    id: props.listQuestion[0].id,\r\n    libelle: props.listQuestion[0].libelle\r\n  };\r\n  const [currentQuestion, setCurrentQuestion] = useState(initialQuestionState);\r\n  // const [indexQuestion, setIndexQuestion] = useState(19);\r\n  const [indexQuestion, setIndexQuestion] = useState(0);\r\n  const [pourcentageBar, setPourcentageBar] = useState(0)\r\n\r\n  useEffect(() =>\r\n    setCurrentQuestion(props.listQuestion[indexQuestion], [indexQuestion])\r\n  )\r\n\r\n  const setIndex = () => {\r\n    setPourcentageBar(progressPercent)\r\n    setIndexQuestion(indexQuestion + 1)\r\n  }\r\n\r\n  const backPreviousIndex = () => {\r\n    setPourcentageBar(progressPercent)\r\n    setIndexQuestion(indexQuestion - 1)\r\n  }\r\n\r\n  const displayProfil = () => {\r\n    props.displayProfil();\r\n  }\r\n\r\n  const progressPercent = ((indexQuestion + 1) * 100) / (props.listQuestion.length - 1)\r\n\r\n\r\n  if (!currentQuestion) {\r\n    return (\r\n      <div>\r\n        {displayProfil()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (currentQuestion) {\r\n\r\n    return (\r\n      <div className=\"question-container\">\r\n        <div className=\"progress\">\r\n          <div className=\"progress-bar progress-bar-striped progress-bar-animated\" style={{ width: pourcentageBar + '%' }}>\r\n            Question {indexQuestion + 1} sur {props.listQuestion.length}\r\n          </div>\r\n        </div>\r\n        <h3 className=\"titre-question\">{currentQuestion.libelle}</h3>\r\n        <div className=\"indexQuestion\"></div>\r\n        <Proposition\r\n          setIndexHandler={setIndex}\r\n          idQuestion={currentQuestion.id}\r\n        />\r\n        <br />\r\n        {/* <FontAwesomeIcon icon={faArrowLeft}\r\n          onClick={backPreviousIndex} /> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}