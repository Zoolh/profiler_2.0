{"ast":null,"code":"import _slicedToArray from\"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import ProfilDataService from'../../services/ProfilService';import{makeStyles}from'@material-ui/core/styles';import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import Typography from'@material-ui/core/Typography';var ModalProfil=function ModalProfil(props){var useStyles=makeStyles({root:{minWidth:275,marginBottom:10// backgroundColor: 'green'\n},bullet:{display:'inline-block',margin:'0 2px',transform:'scale(0.8)'},title:{fontSize:14},pos:{marginBottom:12}});var initialStateProfil={id:null,libelle:\"\",temps:\"\",variation:\"\",actif_profil:[],conseil_profil:[],description:\"\"};var _useState=useState(initialStateProfil),_useState2=_slicedToArray(_useState,2),profil=_useState2[0],setProfil=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allProfils=_useState4[0],setAllProfils=_useState4[1];var classes=useStyles();useEffect(function(){getProfil();getAllProfil();},[]);var getProfil=function getProfil(){ProfilDataService.getById(props.ResultatProfil).then(function(response){setProfil({id:response.data.id,libelle:response.data.libelle,temps:response.data.temps,variation:response.data.variation,actif_profil:response.data.actif_profil,description:response.data.description});}).catch(function(e){console.log(e);});};var getAllProfil=function getAllProfil(){ProfilDataService.getAll().then(function(response){setAllProfils(response.data);}).catch(function(e){console.log(e);});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"Vos r\\xE9ponses permettent de d\\xE9terminer que vous pouvez opter pour un niveau de risque\"),allProfils.map(function(p,key){return/*#__PURE__*/React.createElement(Card,{key:key,className:classes.root,style:{backgroundColor:p.libelle===profil.libelle?'LightGreen':null}},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{className:classes.title,color:\"textSecondary\",gutterBottom:true},p.libelle),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",component:\"p\"},\"Variation moyenne annuelle cible : \",p.variation,/*#__PURE__*/React.createElement(\"br\",null),\"Temps \\xE0 y consacrer (Sauf gestion d\\xE9l\\xE9gu\\xE9e) : \",p.temps,profil.libelle===\"Trader\"&&p.libelle===\"Trader\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"Vos r\\xE9ponses permettent de d\\xE9terminer qu'en plus de votre profil d'investisseur vous pouvez envisager le profil Trader\")):null)));}));};export default ModalProfil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/modals/profil.modal.js"],"names":["React","useState","useEffect","ProfilDataService","makeStyles","Card","CardContent","Typography","ModalProfil","props","useStyles","root","minWidth","marginBottom","bullet","display","margin","transform","title","fontSize","pos","initialStateProfil","id","libelle","temps","variation","actif_profil","conseil_profil","description","profil","setProfil","allProfils","setAllProfils","classes","getProfil","getAllProfil","getById","ResultatProfil","then","response","data","catch","e","console","log","getAll","map","p","key","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ProfilDataService from '../../services/ProfilService'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst ModalProfil = props => {\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            minWidth: 275,\r\n            marginBottom: 10,\r\n            // backgroundColor: 'green'\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n    });\r\n\r\n    const initialStateProfil = {\r\n        id: null,\r\n        libelle: \"\",\r\n        temps: \"\",\r\n        variation: \"\",\r\n        actif_profil: [],\r\n        conseil_profil: [],\r\n        description: \"\"\r\n    };\r\n\r\n    const [profil, setProfil] = useState(initialStateProfil);\r\n    const [allProfils, setAllProfils] = useState([]);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        getProfil()\r\n        getAllProfil()\r\n    }, [])\r\n\r\n    const getProfil = () => {\r\n        ProfilDataService.getById(props.ResultatProfil)\r\n            .then(response => {\r\n                setProfil({\r\n                    id: response.data.id,\r\n                    libelle: response.data.libelle,\r\n                    temps: response.data.temps,\r\n                    variation: response.data.variation,\r\n                    actif_profil: response.data.actif_profil,\r\n                    description: response.data.description\r\n                });\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    const getAllProfil = () => {\r\n        ProfilDataService.getAll()\r\n            .then(response => {\r\n                setAllProfils(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Vos réponses permettent de déterminer que vous pouvez opter pour un niveau de risque\r\n            </div>\r\n            {allProfils.map((p, key) => {\r\n                return (\r\n                    <Card key={key} className={classes.root} style={{ backgroundColor: (p.libelle === profil.libelle) ? 'LightGreen' : null }}>\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                {p.libelle}\r\n                            </Typography>\r\n\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                Variation moyenne annuelle cible : {p.variation}\r\n                                <br />\r\n                                Temps à y consacrer (Sauf gestion déléguée) : {p.temps}\r\n                                {profil.libelle === \"Trader\" && p.libelle === \"Trader\" ?\r\n                                    (<div>\r\n                                        <br />\r\n                                        <p>Vos réponses permettent de déterminer qu'en plus de votre profil d'investisseur vous pouvez envisager le profil Trader</p>\r\n                                    </div>) :\r\n                                    (null)}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalProfil;\r\n"]},"metadata":{},"sourceType":"module"}