{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\modals\\\\marche.modal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ActifsDataService from '../../services/ActifServices';\nimport ProfilDataService from '../../services/ProfilService';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst ModalProfil = props => {\n  // const [allActifs, setAllActifs] = useState([])\n  const [actifSelected, setActifSelected] = useState([]);\n  const [allProfils, setAllProfils] = useState([]);\n  useEffect(() => {\n    getActifSelected();\n    getAllProfil();\n  }, []);\n\n  const getAllProfil = () => {\n    ProfilDataService.getAll().then(response => {\n      setAllProfils(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const getActifSelected = () => {\n    ActifsDataService.getByProfilId(props.ResultatProfil).then(response => {\n      setActifSelected(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      marginBottom: 10 // backgroundColor: 'green'\n\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)'\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Vos r\\xE9ponses permettent de d\\xE9terminer que vous pouvez investir sur les march\\xE9s et produits suivants\"), allProfils.map((p, key) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: key,\n      className: classes.root,\n      style: {\n        backgroundColor: p.id === props.ResultatProfil ? 'LightGreen' : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, p.libelle), p.id === props.ResultatProfil ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 38\n      }\n    }, actifSelected.map((a, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 45\n        }\n      }, a.libelle);\n    })) : null));\n  }));\n};\n\nexport default ModalProfil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/modals/marche.modal.js"],"names":["React","useState","useEffect","ActifsDataService","ProfilDataService","makeStyles","Card","CardContent","Typography","ModalProfil","props","actifSelected","setActifSelected","allProfils","setAllProfils","getActifSelected","getAllProfil","getAll","then","response","data","catch","e","console","log","getByProfilId","ResultatProfil","useStyles","root","minWidth","marginBottom","bullet","display","margin","transform","title","fontSize","pos","classes","map","p","key","backgroundColor","id","libelle","a"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ActifsDataService from '../../services/ActifServices'\r\nimport ProfilDataService from '../../services/ProfilService'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ModalProfil = props => {\r\n\r\n    // const [allActifs, setAllActifs] = useState([])\r\n    const [actifSelected, setActifSelected] = useState([])\r\n    const [allProfils, setAllProfils] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getActifSelected()\r\n        getAllProfil()\r\n    }, [])\r\n\r\n    const getAllProfil = () => {\r\n        ProfilDataService.getAll()\r\n            .then(response => {\r\n                setAllProfils(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    const getActifSelected = () => {\r\n        ActifsDataService.getByProfilId(props.ResultatProfil)\r\n            .then(response => {\r\n                setActifSelected(response.data)\r\n                console.log(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            minWidth: 275,\r\n            marginBottom: 10,\r\n            // backgroundColor: 'green'\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n    });\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            Vos réponses permettent de déterminer que vous pouvez investir sur les marchés et produits suivants\r\n            </div>\r\n            {allProfils.map((p, key) => {\r\n                return (\r\n                    <Card key={key} className={classes.root} style={{ backgroundColor: (p.id === props.ResultatProfil) ? 'LightGreen' : null }}>\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                {p.libelle}\r\n                            </Typography>\r\n                            \r\n                                {p.id === props.ResultatProfil ?\r\n                                    (<Typography variant=\"body2\" component=\"p\">\r\n                                        {actifSelected.map((a, key) => {\r\n                                            return (\r\n                                            <div key={key}>{a.libelle}</div>\r\n                                            )\r\n                                        })}\r\n                                    </Typography>) :\r\n                                    (null)}\r\n                            \r\n                        </CardContent>\r\n                    </Card>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalProfil;\r\n"]},"metadata":{},"sourceType":"module"}