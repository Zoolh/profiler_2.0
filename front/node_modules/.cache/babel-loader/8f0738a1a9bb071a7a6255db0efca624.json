{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\Accueil.js\";\nimport React, { useState, useEffect } from \"react\";\nimport './Accueil.css';\nimport QuestionDataService from \"../services/QuestionService\";\nimport Question from \"../components/Question\";\nimport Profil from \"../components/Profil\";\nimport ProfilDataService from \"../services/ProfilService\";\n\nconst Accueil = props => {\n  const [listQuestions, setListQuestions] = useState();\n  const [target, setTarget] = useState(\"accueil\");\n  const [listeBlocs, setListeBlocs] = useState(); // useEffect(() => getAllBloc(), [target === \"profil\"])\n\n  const getListQuestions = () => {\n    QuestionDataService.getAll().then(response => {\n      setListQuestions(response.data);\n      setTarget(\"questionnaire\");\n    }).catch(e => {\n      console.log(e);\n    });\n  }; // const getAllBloc = () => {\n  //     ProfilDataService.getAllBlocs()\n  //         .then(response => {\n  //             setListeBlocs(response.data)\n  //         })\n  //         .catch(e => {\n  //             console.log(e)\n  //         })\n  // }\n\n\n  const displayProfil = () => {\n    setTarget(\"profil\");\n  };\n\n  if (target === \"profil\") {\n    return /*#__PURE__*/React.createElement(Profil, {\n      listeBlocs: listeBlocs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    });\n  }\n\n  if (target === \"accueil\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-accueil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"D\\xE9terminez votre profil boursier\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"L'un des crit\\xE8res fondamentaux consiste \\xE0 d\\xE9terminer si vous \\xEAtes Investisseur, Trader ou les 2.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 117\n      }\n    }), \"La confusion entre ces deux profils conduit fr\\xE9quemment \\xE0 l'\\xE9chec et \\xE0 des contre-performances.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"En r\\xE9pondant le plus naturellement possible \\xE0 ces questions, vous pourrez d\\xE9terminer votre profil d'investisseur et savoir ce qui vous correspond le mieux sur les march\\xE9s actuels.\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-start\",\n      onClick: getListQuestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"D\\xE9marrer le questionnaire\"));\n  }\n\n  if (target === \"questionnaire\") {\n    return /*#__PURE__*/React.createElement(Question, {\n      compteurProfil: compteurProfil,\n      compteurTypeGestion: compteurTypeGestion,\n      listeSupport: listeSupport,\n      listQuestion: listQuestions,\n      displayProfil: displayProfil,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    });\n  }\n};\n\nexport default Accueil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/Accueil.js"],"names":["React","useState","useEffect","QuestionDataService","Question","Profil","ProfilDataService","Accueil","props","listQuestions","setListQuestions","target","setTarget","listeBlocs","setListeBlocs","getListQuestions","getAll","then","response","data","catch","e","console","log","displayProfil","compteurProfil","compteurTypeGestion","listeSupport"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAGrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,EAAlD;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,SAAD,CAApC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,EAA5C,CALqB,CAOrB;;AAEA,QAAMc,gBAAgB,GAAG,MAAM;AAC3BZ,IAAAA,mBAAmB,CAACa,MAApB,GACKC,IADL,CACUC,QAAQ,IAAI;AACdR,MAAAA,gBAAgB,CAACQ,QAAQ,CAACC,IAAV,CAAhB;AACAP,MAAAA,SAAS,CAAC,eAAD,CAAT;AACH,KAJL,EAKKQ,KALL,CAKWC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAPL;AAQH,GATD,CATqB,CAoBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMG,aAAa,GAAG,MAAM;AACxBZ,IAAAA,SAAS,CAAC,QAAD,CAAT;AACH,GAFD;;AAKA,MAAID,MAAM,KAAK,QAAf,EAAyB;AACrB,wBACI,oBAAC,MAAD;AACI,MAAA,UAAU,EAAEE,UADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH;;AAED,MAAIF,MAAM,KAAK,SAAf,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oIACoG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpG,gHAFJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAPJ,oBASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATR,eASc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATd,eAUI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AACI,MAAA,OAAO,EAAEI,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAVJ,CADJ;AAkBH;;AAED,MAAIJ,MAAM,KAAK,eAAf,EAAgC;AAC5B,wBACI,oBAAC,QAAD;AACI,MAAA,cAAc,EAAEc,cADpB;AAEI,MAAA,mBAAmB,EAAEC,mBAFzB;AAGI,MAAA,YAAY,EAAEC,YAHlB;AAII,MAAA,YAAY,EAAElB,aAJlB;AAKI,MAAA,aAAa,EAAEe,aALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;AAIJ,CA5ED;;AAgFA,eAAejB,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './Accueil.css'\r\nimport QuestionDataService from \"../services/QuestionService\"\r\nimport Question from \"../components/Question\"\r\nimport Profil from \"../components/Profil\"\r\nimport ProfilDataService from \"../services/ProfilService\"\r\n\r\nconst Accueil = props => {\r\n\r\n\r\n    const [listQuestions, setListQuestions] = useState();\r\n    const [target, setTarget] = useState(\"accueil\");\r\n    const [listeBlocs, setListeBlocs] = useState();\r\n\r\n    // useEffect(() => getAllBloc(), [target === \"profil\"])\r\n\r\n    const getListQuestions = () => {\r\n        QuestionDataService.getAll()\r\n            .then(response => {\r\n                setListQuestions(response.data);\r\n                setTarget(\"questionnaire\")\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    // const getAllBloc = () => {\r\n    //     ProfilDataService.getAllBlocs()\r\n    //         .then(response => {\r\n    //             setListeBlocs(response.data)\r\n    //         })\r\n    //         .catch(e => {\r\n    //             console.log(e)\r\n    //         })\r\n    // }\r\n\r\n    const displayProfil = () => {\r\n        setTarget(\"profil\")\r\n    }\r\n\r\n\r\n    if (target === \"profil\") {\r\n        return (\r\n            <Profil\r\n                listeBlocs={listeBlocs} />\r\n        )\r\n    }\r\n\r\n    if (target === \"accueil\") {\r\n        return (\r\n            <div className=\"div-accueil\">\r\n                <h1>Déterminez votre profil boursier</h1>\r\n                <span>\r\n                    L'un des critères fondamentaux consiste à déterminer si vous êtes Investisseur, Trader ou les 2.<br />\r\n                    La confusion entre ces deux profils conduit fréquemment à l'échec et à des contre-performances.\r\n                </span>\r\n                <br />\r\n                <span>En répondant le plus naturellement possible à ces questions, vous pourrez déterminer votre profil d'investisseur\r\n                  et savoir ce qui vous correspond le mieux sur les marchés actuels.\r\n            </span> <br /><br />\r\n                <button className=\"btn btn-start\"\r\n                    onClick={getListQuestions}\r\n                >\r\n                    Démarrer le questionnaire\r\n              </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (target === \"questionnaire\") {\r\n        return (\r\n            <Question\r\n                compteurProfil={compteurProfil}\r\n                compteurTypeGestion={compteurTypeGestion}\r\n                listeSupport={listeSupport}\r\n                listQuestion={listQuestions}\r\n                displayProfil={displayProfil} />\r\n        )\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default Accueil;\r\n"]},"metadata":{},"sourceType":"module"}