{"ast":null,"code":"var _jsxFileName = \"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\src\\\\components\\\\modals\\\\support.modal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SupportDataService from '../../services/SupportInvServices';\n\nconst ModalProfil = props => {\n  const [listeSupports, setListeSupports] = useState([]);\n  useEffect(() => {\n    getListeSupport();\n  }, []);\n\n  const getListeSupport = () => {\n    SupportDataService.getByPropositionId(41).then(response => {\n      setListeSupports(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Vos r\\xE9ponses permettent de d\\xE9terminer que vous pouvez opter pour un niveau de risque\"), listeSupports.map((s, key) => {\n    // console.log(profil)\n    return /*#__PURE__*/React.createElement(Card, {\n      key: key,\n      className: classes.root,\n      style: {\n        backgroundColor: p.libelle === profil.libelle ? 'LightGreen' : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, s.libelle), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Variation moyenne annuelle cible : \", p.variation, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }), \"Temps \\xE0 y consacrer (Sauf gestion d\\xE9l\\xE9gu\\xE9e) : \", p.temps, profil.libelle === \"Trader\" && p.libelle === \"Trader\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, \"Vos r\\xE9ponses permettent de d\\xE9terminer qu'en plus de votre profil d'investisseur vous pouvez envisager le profil Trader\")) : null)));\n  }));\n};\n\nexport default ModalProfil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/modals/support.modal.js"],"names":["React","useState","useEffect","SupportDataService","ModalProfil","props","listeSupports","setListeSupports","getListeSupport","getByPropositionId","then","response","data","console","log","catch","e","map","s","key","classes","root","backgroundColor","p","libelle","profil","title","variation","temps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,eAAe,GAAG,MAAM;AAC1BL,IAAAA,kBAAkB,CAACM,kBAAnB,CAAsC,EAAtC,EACKC,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,gBAAgB,CAACI,QAAQ,CAACC,IAAV,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACH,KAJL,EAKKG,KALL,CAKWC,CAAC,IAAI;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,KAPL;AAQH,GATD;;AAWA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGADA,EAICV,aAAa,CAACW,GAAd,CAAkB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAC3B;AACA,wBACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAgB,MAAA,SAAS,EAAEC,OAAO,CAACC,IAAnC;AAAyC,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAGC,CAAC,CAACC,OAAF,KAAcC,MAAM,CAACD,OAAtB,GAAiC,YAAjC,GAAgD;AAAnE,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEJ,OAAO,CAACM,KAA/B;AAAsC,MAAA,KAAK,EAAC,eAA5C;AAA4D,MAAA,YAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,CAAC,CAACM,OADP,CADJ,eAKI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACwCD,CAAC,CAACI,SAD1C,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,gEAGmDJ,CAAC,CAACK,KAHrD,EAIKH,MAAM,CAACD,OAAP,KAAmB,QAAnB,IAA+BD,CAAC,CAACC,OAAF,KAAc,QAA7C,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sIAFH,CADJ,GAKI,IATT,CALJ,CADJ,CADJ;AAqBH,GAvBA,CAJD,CAFJ;AAiCH,CApDD;;AAsDA,eAAepB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SupportDataService from '../../services/SupportInvServices'\r\n\r\nconst ModalProfil = props => {\r\n\r\n    const [listeSupports, setListeSupports] = useState([])\r\n\r\n    useEffect(() => {\r\n        getListeSupport()\r\n    }, [])\r\n\r\n    const getListeSupport = () => {\r\n        SupportDataService.getByPropositionId(41)\r\n            .then(response => {\r\n                setListeSupports(response.data)\r\n                console.log(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n        <div>\r\n        Vos réponses permettent de déterminer que vous pouvez opter pour un niveau de risque\r\n        </div>\r\n        {listeSupports.map((s, key) => {\r\n            // console.log(profil)\r\n            return (\r\n                <Card key={key} className={classes.root} style={{ backgroundColor: (p.libelle === profil.libelle) ? 'LightGreen' : null }}>\r\n                    <CardContent>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            {s.libelle}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Variation moyenne annuelle cible : {p.variation}\r\n                            <br />\r\n                            Temps à y consacrer (Sauf gestion déléguée) : {p.temps}\r\n                            {profil.libelle === \"Trader\" && p.libelle === \"Trader\" ?\r\n                                (<div>\r\n                                    <br />\r\n                                    <p>Vos réponses permettent de déterminer qu'en plus de votre profil d'investisseur vous pouvez envisager le profil Trader</p>\r\n                                </div>) :\r\n                                (null)}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            )\r\n        })}\r\n\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default ModalProfil;\r\n"]},"metadata":{},"sourceType":"module"}