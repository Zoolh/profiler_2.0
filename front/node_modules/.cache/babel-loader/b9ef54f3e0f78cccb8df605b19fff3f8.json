{"ast":null,"code":"import _slicedToArray from\"C:\\\\Perso\\\\profiler_2.0\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import GestionDataService from'../../services/TypeGestionServices';import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';var ModalProfil=function ModalProfil(props){var initialTypeGestion={id:null,libelle:\"\",description:\"\"};var _useState=useState(initialTypeGestion),_useState2=_slicedToArray(_useState,2),typeGestion=_useState2[0],setTypeGestion=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allTypesGestion=_useState4[0],setAllTypesGestion=_useState4[1];var getAllTypesGestion=function getAllTypesGestion(){GestionDataService.getAll().then(function(response){setAllTypesGestion(response.data);console.log(response.data);}).catch(function(e){console.log(e);});};var getTypeGestion=function getTypeGestion(){GestionDataService.getById(props.ResultatGestion).then(function(response){setTypeGestion({id:response.data.id,libelle:response.data.libelle,description:response.data.description});}).catch(function(e){console.log(e);});};var useStyles=makeStyles({root:{minWidth:275,marginBottom:10// backgroundColor: 'green'\n},bullet:{display:'inline-block',margin:'0 2px',transform:'scale(0.8)'},title:{fontSize:14},pos:{marginBottom:12}});var classes=useStyles();useEffect(function(){getAllTypesGestion();getTypeGestion();},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"Vos r\\xE9ponses permettent de d\\xE9terminer que vous pouvez opter pour une gestion\"),allTypesGestion.map(function(g,key){console.log(g);return/*#__PURE__*/React.createElement(Card,{key:key,className:classes.root,style:{backgroundColor:g.libelle===typeGestion.libelle?'LightGreen':null}},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{className:classes.title,color:\"textSecondary\",gutterBottom:true},g.libelle),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",component:\"p\"},g.description)));}));};export default ModalProfil;","map":{"version":3,"sources":["C:/Perso/profiler_2.0/front/src/components/modals/gestion.modal.js"],"names":["React","useState","useEffect","GestionDataService","Card","CardContent","Typography","makeStyles","ModalProfil","props","initialTypeGestion","id","libelle","description","typeGestion","setTypeGestion","allTypesGestion","setAllTypesGestion","getAllTypesGestion","getAll","then","response","data","console","log","catch","e","getTypeGestion","getById","ResultatGestion","useStyles","root","minWidth","marginBottom","bullet","display","margin","transform","title","fontSize","pos","classes","map","g","key","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport GestionDataService from '../../services/TypeGestionServices'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ModalProfil = props => {\r\n\r\n    const initialTypeGestion = {\r\n        id: null,\r\n        libelle: \"\",\r\n        description: \"\"\r\n    }\r\n\r\n    const [typeGestion, setTypeGestion] = useState(initialTypeGestion)\r\n    const [allTypesGestion, setAllTypesGestion] = useState([])\r\n\r\n    const getAllTypesGestion = () => {\r\n        GestionDataService.getAll()\r\n            .then(response => {\r\n                setAllTypesGestion(response.data)\r\n                console.log(response.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n    const getTypeGestion = () => {\r\n        GestionDataService.getById(props.ResultatGestion)\r\n        .then(response => {\r\n            setTypeGestion({\r\n                id: response.data.id,\r\n                libelle: response.data.libelle,\r\n                description: response.data.description\r\n            });\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            minWidth: 275,\r\n            marginBottom: 10,\r\n            // backgroundColor: 'green'\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        getAllTypesGestion()\r\n        getTypeGestion()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n            Vos réponses permettent de déterminer que vous pouvez opter pour une gestion\r\n            </div>\r\n            {allTypesGestion.map((g, key) => {\r\n                console.log(g)\r\n                return (\r\n                    <Card key={key} className={classes.root} style={{ backgroundColor: (g.libelle === typeGestion.libelle) ? 'LightGreen' : null }}>\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                {g.libelle}\r\n                            </Typography>\r\n\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                {g.description}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalProfil;\r\n"]},"metadata":{},"sourceType":"module"}